// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

const { writeFileSync } = require('fs');
const ado = require('../task.json');

// Do not document the following inputs:
const exclude = ['hostingMode'];

// Create array of inputs to document:
const inputs = ado.inputs.filter(({ name }) => !exclude.includes(name));

// Array of inputs that are not manually documented
const additionalInputs = inputs
    .filter(({ name }) => !['url', 'staticSiteDir', 'staticSiteUrlRelativePath', 'staticSitePort'].includes(name))
    .map(({ name }) => name);

// Build markdown:
const markdown = `<!--
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
-->

<!--
DO NOT EDIT THIS FILE DIRECTLY
The content is generated by scripts/documentation.js
-->

# Accessibility Insights for Azure DevOps inputs

## Required

${documentInput('url')}

or

${documentInputs(['staticSiteDir', 'staticSiteUrlRelativePath', 'staticSitePort'])}

## Optional

${documentInputs(additionalInputs)}`;

// Write documentation:
writeFileSync('../../docs/ado-extension-inputs.md', markdown);

//
// Documentation functions
//
function documentInputs(inputs) {
    return inputs.map(documentInput).join('\n');
}

function documentInput(input) {
    const { name, type, required, defaultValue, helpMarkDown, options } = inputs.find(({ name }) => name === input);
    return `- \`${name}\` (${handleType(type, options)})${handleRequired(required)}.${handleDefault(defaultValue)} ${helpMarkDown}\n`;
}

function handleDefault(defaultValue) {
    return defaultValue ? ` Default: \`${defaultValue}\`.` : '';
}

function handleRequired(required) {
    return required ? ` **Required**` : '';
}

function handleType(type, options) {
    if (type !== 'pickList') return type;
    return `One of: ${Object.keys(options)
        .filter((f) => f)
        .map((o) => `"${o}"`)
        .join(', ')}`;
}
