// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResultMarkdownBuilder builds content with failures 1`] = `
"### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action

**4 failure instances**
* (3) **rule id**:  rule description
* (1) **rule id 2**:  rule description 2

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 5 with failures, 1 passed, 7 not scannable
**Rules**: 4 with failures, 1 passed, 2 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder builds content with no failures 1`] = `
"### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures detected**
No failures were detected by automatic scanning.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 1 passed, 7 not scannable
**Rules**: 0 with failures, 1 passed, 2 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder builds content with title 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures detected**
No failures were detected by automatic scanning.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 0 passed, 0 not scannable
**Rules**: 0 with failures, 0 passed, 0 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder builds error content 1`] = `
"### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action: Something went wrong
You can review the log to troubleshoot the issue. Fix it and re-run the workflow to run the automated accessibility checks again.

---
"
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are baseline failures and new failures 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action

**4 failure instances**
* (3) **rule id**:  rule description
* (1) **rule id 2**:  rule description 2

**1 failure instances in baseline**
(not shown; see [baselining docs](temporarily-empty) for how to include new failures into the baseline)

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 5 with failures, 1 passed, 7 not scannable
**Rules**: 4 with failures, 1 passed, 2 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are baseline failures and no new failures 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures not in baseline**
No failures were detected by automatic scanning except those which exist in the baseline.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)

**1 failure instances in baseline**
(not shown; see [baselining docs](temporarily-empty))

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 0 passed, 0 not scannable
**Rules**: 0 with failures, 0 passed, 0 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are new failures and no baseline detected 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action

**4 failure instances**
* (3) **rule id**:  rule description
* (1) **rule id 2**:  rule description 2

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 5 with failures, 1 passed, 7 not scannable
**Rules**: 4 with failures, 1 passed, 2 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are no baseline failures and no new failures 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures detected**
No failures were detected by automatic scanning.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)



See scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 1 passed, 7 not scannable
**Rules**: 0 with failures, 1 passed, 2 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are no new failures and baseline failures are undefined 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures detected**
No failures were detected by automatic scanning.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 0 passed, 0 not scannable
**Rules**: 0 with failures, 0 passed, 0 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;

exports[`ResultMarkdownBuilder with baseline builds content when there are no new failures and no baseline detected 1`] = `
"### some title
### ![Accessibility Insights](https://accessibilityinsights.io/img/a11yinsights-blue.svg) Accessibility Insights Action
**:white_check_mark: No failures detected**
No failures were detected by automatic scanning.

**:point_right: Next step:** Manually assess keyboard accessibility with [Accessibility Insights Tab Stops](https://accessibilityinsights.io/docs/en/web/getstarted/fastpass/#complete-the-manual-test-for-tab-stops)

**Baseline not detected**
A baseline lets you mark known failures so it's easier to identify new failures as they're introduced. See [baselining docs](temporarily-empty) for more.

See all failures and scan details by downloading the report from [run artifacts](temporarily-empty)
---
#### Scan summary
**URLs**: 0 with failures, 0 passed, 0 not scannable
**Rules**: 0 with failures, 0 passed, 0 not applicable
---
This scan used [axe-core axeVersion](https://github.com/dequelabs/axe-core/releases/tag/vaxeVersion) with userAgent."
`;
