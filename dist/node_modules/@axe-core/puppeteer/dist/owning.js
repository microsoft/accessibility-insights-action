"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadPage = void 0;
const axePuppeteer_1 = require("./axePuppeteer");
class OwningAxePuppeteer extends axePuppeteer_1.AxePuppeteer {
    constructor(page, source) {
        super(page, source);
        this.page = page;
    }
    analyze(callback) {
        const _super = Object.create(null, {
            analyze: { get: () => super.analyze }
        });
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield _super.analyze.call(this, callback);
            }
            finally {
                yield this.page.close();
            }
        });
    }
}
function loadPage(browser, url, pageOpts = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        const page = yield browser.newPage();
        yield page.setBypassCSP(true);
        yield page.goto(url, pageOpts.opts);
        return new OwningAxePuppeteer(page, pageOpts.source);
    });
}
exports.loadPage = loadPage;
//# sourceMappingURL=owning.js.map