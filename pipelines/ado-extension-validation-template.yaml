# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# This template covers the validation scenarios for the ADO extension as triggered for
# a PR/CI build of a GitHub repo. Note that release validation *also* requires covering
# PR/CI scenarios as triggered from an ADO repo; see the release validation OneNote
# template for details.

# These are primarily validated against the staging environment during release validation

parameters:
    - name: taskUnderTest
      type: string

variables:
    - group: 'ado-auth-example-secrets'

steps:
    # reused by all "url" cases
    - script: npx serve "$(System.DefaultWorkingDirectory)/dev/website-root" -l 5858 &
      displayName: 'Start /dev/website-root test server at http://localhost:5858'

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 1: staticSiteDir, no baseline'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          # intentionally omits artifactName; should go to default accessibility-reports
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should succeed] case 2: staticSiteDir, no baseline, failOnAccessibilityError:false'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          failOnAccessibilityError: false
          outputArtifactName: accessibility-reports-case-2
      condition: succeededOrFailed()

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 3: url, no baseline'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-3'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should succeed] case 4: up-to-date baseline'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-4'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/up-to-date-5858.baseline'
      condition: succeededOrFailed()

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 5: baseline missing failures'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-5'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/missing-failures-5858.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 6: baseline with resolved failures'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-6'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/with-resolved-failures-5858.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 7: new baseline file'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          outputArtifactName: 'accessibility-reports-case-7'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/doesnt-exist.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 8: url, custom artifact upload step'
      inputs:
          url: 'http://localhost:5858'
          uploadOutputArtifact: false
          outputDir: '_accessibility-reports-case-8'
      condition: succeededOrFailed()
      continueOnError: true

    - publish: '$(System.DefaultWorkingDirectory)/_accessibility-reports-case-8'
      displayName: 'custom report artifact upload for case 8'
      artifact: 'accessibility-reports-case-8'
      condition: succeededOrFailed()

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 9: invalid inputs (no site specified)'
      inputs:
          outputArtifactName: 'accessibility-reports-case-9'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 10: invalid inputs (both url and staticSiteDir specified)'
      inputs:
          url: 'http://localhost:5858'
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          outputArtifactName: 'accessibility-reports-case-10'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case 11: v1 inputs specified'
      inputs:
          repoServiceConnectionName: 'this isnt used anymore'
          # siteDir instead of staticSiteDir
          siteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: 'case 12: url, azure portal auth test'
      inputs:
          url: 'https://portal.azure.com'
          serviceAccountName: $(a11yinsscan-service-acct-username)
          serviceAccountPassword: $(a11yinsscan-service-acct-password)
          authType: 'AAD'
          outputArtifactName: 'accessibility-reports-case-12'
      condition: succeededOrFailed()
      continueOnError: true
