# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# This template covers the validation scenarios for the ADO extension as triggered for
# a PR/CI build of a GitHub repo. Note that release validation *also* requires covering
# PR/CI scenarios as triggered from an ADO repo; see the release validation OneNote
# template for details.

# These are primarily validated against the staging environment during release validation

parameters:
    - name: taskUnderTest
      type: string

variables:
    - group: 'ado-auth-example-secrets'

steps:
    - task: NodeTool@0
      inputs:
          versionSpec: '16.x'
          displayName: Use Node 16.x
    # reused by all "url" cases
    - script: npx serve "$(System.DefaultWorkingDirectory)/dev/website-root" -l 5858 &
      displayName: 'Start /dev/website-root test server at http://localhost:5858'

    # Please keep all "should succeed" cases together as a block before and "should fail" cases.
    # Do not specify a condition so that the pipeline will fail if any of these fail.
    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should succeed] case succeed-1: staticSiteDir, no baseline, failOnAccessibilityError:false'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          failOnAccessibilityError: false
          outputArtifactName: accessibility-reports-case-succeed-1

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should succeed] case succeed-2: up-to-date baseline'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-succeed-2'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/up-to-date-5858.baseline'

    # The continueOnError for this case reflects a known issue with the task that will be fixed in a future release
    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should succeed] case succeed-3: url, azure portal auth test'
      inputs:
          url: 'https://portal.azure.com'
          serviceAccountName: $(a11yinsscan-service-acct-username)
          serviceAccountPassword: $(a11yinsscan-service-acct-password)
          authType: 'AAD'
          outputArtifactName: 'accessibility-reports-case-succeed-3'
      continueOnError: true

    # Please keep all "should fail" cases together as a block after all "should succeed" cases
    # Each case will need to have continueOnError: true. Each case but the first will also need
    # a condition: succeededOrFailed() so that the pipeline will run correctly.
    # Note that the first case _temporarily_ has a condition: succeededOrFailed(). This will
    # be removed once we fix the issue that is causing the succeed-3 case to fail.
    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-1: staticSiteDir, no baseline'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          # intentionally omits artifactName; should go to default accessibility-reports
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-2: url, no baseline'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-fail-2'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-3: baseline missing failures'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-fail-3'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/missing-failures-5858.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-4 baseline with resolved failures'
      inputs:
          url: 'http://localhost:5858'
          outputArtifactName: 'accessibility-reports-case-fail-4'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/with-resolved-failures-5858.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-5: new baseline file'
      inputs:
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          outputArtifactName: 'accessibility-reports-case-fail-5'
          baselineFile: '$(System.DefaultWorkingDirectory)/dev/website-baselines/doesnt-exist.baseline'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-6: url, custom artifact upload step'
      inputs:
          url: 'http://localhost:5858'
          uploadOutputArtifact: false
          outputDir: '_accessibility-reports-case-fail-6'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-7: invalid inputs (no site specified)'
      inputs:
          outputArtifactName: 'accessibility-reports-case-fail-7'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-8: invalid inputs (both url and staticSiteDir specified)'
      inputs:
          url: 'http://localhost:5858'
          staticSiteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
          outputArtifactName: 'accessibility-reports-case-fail-8'
      condition: succeededOrFailed()
      continueOnError: true

    - task: ${{ parameters.taskUnderTest }}
      displayName: '[should fail] case fail-9: v1 inputs specified'
      inputs:
          repoServiceConnectionName: 'this isnt used anymore'
          # siteDir instead of staticSiteDir
          siteDir: '$(System.DefaultWorkingDirectory)/dev/website-root'
      condition: succeededOrFailed()
      continueOnError: true

    - publish: '$(System.DefaultWorkingDirectory)/_accessibility-reports-case-fail-6'
      displayName: 'custom report artifact upload for case fail-6'
      artifact: 'accessibility-reports-case-fail-6'
      condition: succeededOrFailed()
